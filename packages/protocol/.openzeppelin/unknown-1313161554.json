{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x57f1f71D52dEFB8b37705eA5f5B7629faC26C73f",
      "txHash": "0x6b9a9c78a0ca2ab4224be33fee240f40b8fe396b4e3c37aa914a8b9234373856",
      "kind": "transparent"
    },
    {
      "address": "0xA21F6068E32F332e658C983985aAeda022252421",
      "txHash": "0xecd8c0daf6e723923004849e1a11fa6cf5ce457ecd811f2a5636a0ed74d662c3",
      "kind": "transparent"
    },
    {
      "address": "0xcCA64a97BF5584D3885a70701bdd2Bda3A7bF3Ec",
      "txHash": "0x857637bdb5e09d03c7d7c5524fc839583ad8484251118f2cabfe8a76745dec0c",
      "kind": "transparent"
    },
    {
      "address": "0xaA5a10393dfF437B9d33A0d9B4cFc0688B8fCd8E",
      "txHash": "0x831270936d35f0a15dffe2690e47d86a13d6bafed5abc4455f5fc1b4ce506386",
      "kind": "transparent"
    },
    {
      "address": "0xeB8827E360F1B9a4e68875AF43976e3E85042508",
      "txHash": "0x53aadc7a6ea3285a1e4067be10c4aaa0e84177b5a3590846a52988ee11e339e4",
      "kind": "transparent"
    },
    {
      "address": "0xf282cd20389b6e52b44cBF275AC3B1C470A97A59",
      "txHash": "0xe118371d0eacb618bda026c612214151732de389c545347ab8179300b4d26884",
      "kind": "transparent"
    },
    {
      "address": "0xB2123D27842FaeDbFf0b39E2fC2bC59BCBd6248c",
      "txHash": "0xeb5ed756b8dc93d9c3054ba0d65bb903a5cb18e3bab0ddc7640f623a2789ecb3",
      "kind": "transparent"
    },
    {
      "address": "0x76941Fb15eC56f73c178cf7259a786Ab3196cd9A",
      "txHash": "0x40434a4b11afc8547c2234a189a72d7a37cbc23557a854bf48ede7d191fcea49",
      "kind": "transparent"
    },
    {
      "address": "0x129d3e4070E97eE82a1AeF4888a8E200F199296A",
      "txHash": "0x617104025a2e088bb787ca0b68bba5c6b24907fe8065bf0c7fc73a5e91bfb04a",
      "kind": "transparent"
    },
    {
      "address": "0x7790E8308AE586f873679667cd46C0FC6262c03a",
      "txHash": "0xc679288cdf6ae2cd13cbac49e31b22876b0b1780266553d4cc508681c147f4a2",
      "kind": "transparent"
    },
    {
      "address": "0xf9B67Ae2C5aE8C6b560531FBcFF7607F3154a3Cc",
      "txHash": "0x772a3603d7f6308a28a598e5b3f80ba604a8bb65997d59082dcc92c626feb0db",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b3a5f49f3dd1b7b69021fe29cde7fa858dd32d13eeeb91b224da19780196ff8f": {
      "address": "0xE4b2B68F4A29d2A8Cbc0A3Ab1600EA6Df1210FA8",
      "txHash": "0x6426bb4854fab895bf2b27e3e5e7df48db6621a3af896279b4e14f357b3c42d4",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "156",
            "type": "t_uint8",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/presets/ERC20PresetMinterPauser.sol:106"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Fidu",
            "src": "contracts/protocol/core/Fidu.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "483d76ca778c81d60173349d30921a9261d852e8ce786d1fbdb160cd6b75f65b": {
      "address": "0xe8fFE75Dc76B335f710b62b8065D19f272cAE3EB",
      "txHash": "0x2f6e2eeb482dfa60d334a7d3574f6847b87360dda319ac929940855029dc1d1b",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:26"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)10114_storage)",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:36"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_struct(PoolInfo)16643_storage)",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:38"
          },
          {
            "label": "royaltyParams",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(RoyaltyParams)12930_storage",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)16643_storage)": {
            "label": "mapping(address => struct PoolTokens.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)10114_storage)": {
            "label": "mapping(uint256 => struct IPoolTokens.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolInfo)16643_storage": {
            "label": "struct PoolTokens.PoolInfo",
            "members": [
              {
                "label": "totalMinted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalPrincipalRedeemed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoyaltyParams)12930_storage": {
            "label": "struct ConfigurableRoyaltyStandard.RoyaltyParams",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)10114_storage": {
            "label": "struct IPoolTokens.TokenInfo",
            "members": [
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tranche",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "principalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "principalRedeemed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "interestRedeemed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f531b7ba1619ad18e264cfeb9e01b8ff2f65983778af95a69e02cd0ff6d59c48": {
      "address": "0xDA832b27E91d4B42205e155609baa9C93368a66F",
      "txHash": "0xb309b265fb3002db696f88354c8994f509ef3327892c80bec785058dc08bb007",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "upgradeDataFor",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:21"
          },
          {
            "label": "_nextImplementationOf",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:24"
          },
          {
            "label": "lineageIdOf",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:27"
          },
          {
            "label": "_currentOfLineage",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:30"
          },
          {
            "label": "currentLineageId",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:33"
          },
          {
            "label": "_byVersion",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_bytes_memory_ptr,t_address)",
            "contract": "VersionedImplementationRepository",
            "src": "contracts/protocol/core/proxy/VersionedImplementationRepository.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_address)": {
            "label": "mapping(bytes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a7a300afd64d63121d6fe4a93d48e3d1cbf11ff67236c346decb89df8f282cdc": {
      "address": "0x1E96325dB89E92A339052ccb789E95317B8f7a84",
      "txHash": "0x2db9ee9d6236ae6c80027a6ecd842747db6f055e561c9c17a7b9248800e76180",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "sharePrice",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "label": "totalLoansOutstanding",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "label": "totalWritedowns",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "454",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "label": "compoundBalance",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:28"
          },
          {
            "label": "writedowns",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_uint256)",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:29"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7cd78fe1e0780ae35c1bb556780004afcdf4303636892fb432df43ead6e4702d": {
      "address": "0x3ff4084151AC4723b7d7A567FFDC6E075Af648A7",
      "txHash": "0x3c134c2241df22beb29a501498aa4d8e9455bcbd5f4da0464f8789fde83e7d6b",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "GoldfinchFactory",
            "src": "contracts/protocol/core/GoldfinchFactory.sol:25"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1829e65b0dc0befd4c019c9df4613e22590fe048b371ab852dc927681dac8d17": {
      "address": "0x034F9C34a9bBfE33bb8fDd5aFb62CEC999404813",
      "txHash": "0xf1fbc5246f664fd7748b3cca72b1f865e84e5174ba477a2f98b1d8322d69551c",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "401",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:43"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:46"
          },
          {
            "label": "accumulatedRewardsPerToken",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:49"
          },
          {
            "label": "rewardsAvailable",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:52"
          },
          {
            "label": "positionToAccumulatedRewardsPerToken",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:55"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:59"
          },
          {
            "label": "minRate",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:62"
          },
          {
            "label": "maxRate",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:65"
          },
          {
            "label": "maxRateAtPercent",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:69"
          },
          {
            "label": "minRateAtPercent",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:73"
          },
          {
            "label": "vestingLength",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:78"
          },
          {
            "label": "totalStakedSupply",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:86"
          },
          {
            "label": "totalLeveragedStakedSupply",
            "offset": 0,
            "slot": "463",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:89"
          },
          {
            "label": "leverageMultipliers",
            "offset": 0,
            "slot": "464",
            "type": "t_mapping(t_enum(LockupPeriod)28969,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:92"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)10336_storage)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:95"
          },
          {
            "label": "effectiveMultipliers",
            "offset": 0,
            "slot": "466",
            "type": "t_mapping(t_enum(StakedPositionType)10321,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_enum(LockupPeriod)28969": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakedPositionType)10321": {
            "label": "enum StakedPositionType",
            "members": [
              "Fidu",
              "CurveLP"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LockupPeriod)28969,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakedPositionType)10321,t_uint256)": {
            "label": "mapping(enum StakedPositionType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)10336_storage)": {
            "label": "mapping(uint256 => struct StakedPosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Rewards)11283_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalVested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakedPosition)10336_storage": {
            "label": "struct StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11283_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "positionType",
                "type": "t_enum(StakedPositionType)10321",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "unsafeEffectiveMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "unsafeBaseTokenExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e268229f6e09c96d9923fe497d3b4a53acdf4b288c0b5ed6cc4e533828d09228": {
      "address": "0xCe7F9d1b28B957bC070d3232B931aA75005f5855",
      "txHash": "0x3a3ee47433054ecdf9c837068f3179c10f59d4bc72ce7003d4d0df37e97c3469",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "401",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:33"
          },
          {
            "label": "rewardsAvailable",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:36"
          },
          {
            "label": "tokenLaunchTimeInSeconds",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:39"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(Rewards)10740_storage)",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Rewards)10740_storage)": {
            "label": "mapping(uint256 => struct CommunityRewardsVesting.Rewards)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Rewards)10740_storage": {
            "label": "struct CommunityRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalGranted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cliffLength",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "vestingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "revokedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a5477a5839e6b7e5ea32c3e4448678bd1e0abb689b48ae84d2e9de4dc6df1510": {
      "address": "0x14ABe863A1A4c2e2B8Bde8c760064F9885Cc4387",
      "txHash": "0x839abd5c20bf8c099df5b41183ea9c8aad2e51282dab209f8a84c72a670189af",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3395_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetPauserUpgradeable",
            "src": "contracts/external/ERC1155PresetPauserUpgradeable.sol:113"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "UniqueIdentity",
            "src": "contracts/protocol/core/UniqueIdentity.sol:35"
          },
          {
            "label": "supportedUIDTypes",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "UniqueIdentity",
            "src": "contracts/protocol/core/UniqueIdentity.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3395_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3395_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3094_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3094_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ff33f33ac10f97ff76332d8b2875ef224bb52047e2769220ef01b4d15766088c": {
      "address": "0x7F0150222890308F177EE93A12e863aa8A1D56eC",
      "txHash": "0x87c79ffdafb4435e2355a229b6ad6d394f7b0c62eae74a8429eee5dfbb1dc1d3",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "uniqueIdentity",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:16"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "452",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:20"
          },
          {
            "label": "legacyGoList",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:23"
          },
          {
            "label": "allIdTypes",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)11_storage",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)11_storage": {
            "label": "uint256[11]",
            "numberOfBytes": "352"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a255d8db9ab1a9ca18ae73d56a187b69fb86b5e69d19d82f0a87986c12ca372a": {
      "address": "0xC0849D08a5587c53dEFB022a29b07AC68B68Ce34",
      "txHash": "0x3046ca055ef0485863dd2125181b32b24d027e2e7857f0cfdbfcb8a059ef2801",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:37"
          },
          {
            "label": "totalRewards",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:112"
          },
          {
            "label": "maxInterestDollarsEligible",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:115"
          },
          {
            "label": "totalInterestReceived",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:118"
          },
          {
            "label": "totalRewardPercentOfTotalGFI",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:121"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)25844_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:124"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(BackerRewardsInfo)25839_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:127"
          },
          {
            "label": "poolStakingRewards",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_struct(StakingRewardsPoolInfo)25852_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:130"
          },
          {
            "label": "tokenStakingRewards",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(StakingRewardsTokenInfo)25866_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(StakingRewardsSliceInfo)25863_storage)dyn_storage": {
            "label": "struct BackerRewards.StakingRewardsSliceInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(BackerRewardsInfo)25839_storage)": {
            "label": "mapping(address => struct BackerRewards.BackerRewardsInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_struct(StakingRewardsPoolInfo)25852_storage)": {
            "label": "mapping(contract ITranchedPool => struct BackerRewards.StakingRewardsPoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)25844_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.BackerRewardsTokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakingRewardsTokenInfo)25866_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.StakingRewardsTokenInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BackerRewardsInfo)25839_storage": {
            "label": "struct BackerRewards.BackerRewardsInfo",
            "members": [
              {
                "label": "accRewardsPerPrincipalDollar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BackerRewardsTokenInfo)25844_storage": {
            "label": "struct BackerRewards.BackerRewardsTokenInfo",
            "members": [
              {
                "label": "rewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accRewardsPerPrincipalDollarAtMint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardsPoolInfo)25852_storage": {
            "label": "struct BackerRewards.StakingRewardsPoolInfo",
            "members": [
              {
                "label": "accumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "slicesInfo",
                "type": "t_array(t_struct(StakingRewardsSliceInfo)25863_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakingRewardsSliceInfo)25863_storage": {
            "label": "struct BackerRewards.StakingRewardsSliceInfo",
            "members": [
              {
                "label": "fiduSharePriceAtDrawdown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principalDeployedAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedRewardsPerTokenAtDrawdown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unrealizedAccumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(StakingRewardsTokenInfo)25866_storage": {
            "label": "struct BackerRewards.StakingRewardsTokenInfo",
            "members": [
              {
                "label": "accumulatedRewardsPerTokenAtLastWithdraw",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "059abd15590a3bb21a4e13762f3cf81864c4d2127c7971a9e4c500bfa09ee335": {
      "address": "0x81Eef4d83A3EdfCCbD4e4448731DFe0cC4d9e91C",
      "txHash": "0x22a8d1f96aaa5bc4c8f795da992c7a9c456b3750a1f313083fe1efc322acd437",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Zapper",
            "src": "contracts/protocol/core/Zapper.sol:23"
          },
          {
            "label": "tranchedPoolZaps",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(Zap)22700_storage)",
            "contract": "Zapper",
            "src": "contracts/protocol/core/Zapper.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Zap)22700_storage)": {
            "label": "mapping(uint256 => struct Zapper.Zap)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Zap)22700_storage": {
            "label": "struct Zapper.Zap",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakingPositionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
