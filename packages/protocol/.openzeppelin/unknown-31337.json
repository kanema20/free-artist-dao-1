{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xE75b8E4da218f21cf0F0CE967ac35276A10aAbDB",
      "txHash": "0x7913893598af4ca9228fc242097a31b6310c46822b886278b30a44dcd8cdfbd5",
      "kind": "transparent"
    },
    {
      "address": "0x384860F14B39CcD9C89A73519c70cD5f5394D0a6",
      "txHash": "0xabfdae678419c4b240b182e267471ee6e21c892454b5974b02962b0b68171405",
      "kind": "transparent"
    },
    {
      "address": "0x0Cd73c18C085dEB287257ED2307eC713e9Af3460",
      "txHash": "0x90a8a44b3ca62d71ead3477ba61a78b4177ee9ab4284f2350bbfd58648cceb64",
      "kind": "transparent"
    },
    {
      "address": "0x6a445E9F40e0b97c92d0b8a3366cEF1d67F700BF",
      "txHash": "0x10f063c96096093eeb1064fad1d6f8cffffe04ecd1f5591d4372d40ee1a813d0",
      "kind": "transparent"
    },
    {
      "address": "0x84AC02474c4656C88d4e08FCA63ff73070787C3d",
      "txHash": "0x0d8b9df864dc4f44a881b68944b3f8022956e0571e13917fa621f8c883a5caac",
      "kind": "transparent"
    },
    {
      "address": "0xaA425F8BfE82CD18f634e2Fe91E5DdEeFD98fDA1",
      "txHash": "0xdb231d4c6d0a07a634aa8288bb25f4329ae3a88c4d351de9121431ca90fcb7c8",
      "kind": "transparent"
    },
    {
      "address": "0xd20508E1E971b80EE172c73517905bfFfcBD87f9",
      "txHash": "0x9f1ad3d55e4fac03875975fc5ae4d3596a638bc668dcd3dea3111730ad91029e",
      "kind": "transparent"
    },
    {
      "address": "0x7766e86584069Cf5d1223323d89486e95d9a8C22",
      "txHash": "0x865b7c64dd17c894262d1a81b7549211208b4adec97836b6ecb1332a086d8c20",
      "kind": "transparent"
    },
    {
      "address": "0x57686612C601Cb5213b01AA8e80AfEb24BBd01df",
      "txHash": "0x84a4be75f4946aa541f58d7a4689077943fdaadf5552668438a9b3cfbebf01db",
      "kind": "transparent"
    },
    {
      "address": "0x8481a6EbAf5c7DABc3F7e09e44A89531fd31F822",
      "txHash": "0x5a2ad13fdde8afb2616116d5266a75369efe240ab11fee27ca4c3aa5a7589b63",
      "kind": "transparent"
    },
    {
      "address": "0xFD6FF39DA508d281C2d255e9bBBfAb34B6be60c3",
      "txHash": "0x35209c1c82bcfffaed71d0837bc7a8604ba5be7910b458b8bc2d934e38aa36ca",
      "kind": "transparent"
    },
    {
      "address": "0xba0439088dc1e75F58e0A7C107627942C15cbb41",
      "txHash": "0x517054372b36470ea012f6b23d165e5f3d3366d26329cd57b6e83a376ffb5614",
      "kind": "transparent"
    },
    {
      "address": "0xd7b528e749078daDeE2f0071cde6fca4e191A521",
      "txHash": "0x146cd6fa9b91ecc9e9bff568cc40762481cb4e111fdd082edff2df27f90698f5",
      "kind": "transparent"
    },
    {
      "address": "0xC6bA8C3233eCF65B761049ef63466945c362EdD2",
      "txHash": "0x6564018c2ca7a97d9df8aaf59a49e4f0d10af7a2fecba624d5bfc31d45ea4e12",
      "kind": "transparent"
    },
    {
      "address": "0x05Aa229Aec102f78CE0E852A812a388F076Aa555",
      "txHash": "0x17fe7e4d85cf8341992ac761471620f8ab07f76371933b2c11a3878f3108a431",
      "kind": "transparent"
    },
    {
      "address": "0xcA03Dc4665A8C3603cb4Fd5Ce71Af9649dC00d44",
      "txHash": "0x84bb1bb183b76f3dde78fc4867159c067dbbb1418bdf365333d9cc6248fd35cc",
      "kind": "transparent"
    },
    {
      "address": "0x381445710b5e73d34aF196c53A3D5cDa58EDBf7A",
      "txHash": "0xa9cbd299b3ed98ab95405161885b18b9047650c73ae132971e2cc8efdc4e7ae1",
      "kind": "transparent"
    },
    {
      "address": "0xfbAb4aa40C202E4e80390171E82379824f7372dd",
      "txHash": "0x16fcc3493995efe450f2144f32c5bf9bb7b16968807405ac80b3346da1a7c608",
      "kind": "transparent"
    },
    {
      "address": "0x1e2F4432bFeF9E9Ad39DA6d272F4aFf33629c770",
      "txHash": "0x7819e21ca07ad0e49bb41cd1004be406086e5095deede484bb47f030f35d1885",
      "kind": "transparent"
    },
    {
      "address": "0x505d59ffFd312983Cc0eD114d7F117B91520d742",
      "txHash": "0x0c450b0a5e8f23d5cf698ab98ad34f854c65036f3e9c0cd77cf389c954b86aa7",
      "kind": "transparent"
    },
    {
      "address": "0x0Cf17D5DcDA9cF25889cEc9ae5610B0FB9725F65",
      "txHash": "0x4856c884c557655364094dd13950a811e7b1e3ded7a37aafb5a3a5e2a7ab260b",
      "kind": "transparent"
    },
    {
      "address": "0xC76A71C4492c11bbaDC841342C4Cb470b5d12193",
      "txHash": "0x3435cbcc7ab53e29e79ff1c1293260adfa495a66ee6c2750e220ecfe9f5a4cc2",
      "kind": "transparent"
    },
    {
      "address": "0x8613A4029EaA95dA61AE65380aC2e7366451bF2b",
      "txHash": "0x3c4ef84e082fa640e5746483a4347e210034dba57bb270bbf8715d4e24c491d5",
      "kind": "transparent"
    },
    {
      "address": "0xe0B39353F69b54e945364ffcdDD7901697Ca0166",
      "txHash": "0xbb76876b807fb30788e1a0a95963931b04f26d870e91cc861d9b56d85aecda2e",
      "kind": "transparent"
    },
    {
      "address": "0xAd5d57aD9bB17d34Debb88566ab2F5dB879Cc46F",
      "txHash": "0x94c94d47a5b395e2843a97a9de6deb4c597ae6ba53f5b7e7dd5cb9b71bc217b8",
      "kind": "transparent"
    },
    {
      "address": "0x55cb3b67D9E65F0Cf4eABCAC84564a1bE6E3b06A",
      "txHash": "0x563347f224c66383bd15ea330a967ac99bdd49b0f4ee5f4e1980d4472709543e",
      "kind": "transparent"
    },
    {
      "address": "0xBAbf42f078e0618713F17C4169908C2A8cCA5f37",
      "txHash": "0xa911ae2ef2b0e9b5229c6a92336d2c3705e5dd5163872fd78baa98e243edebd8",
      "kind": "transparent"
    },
    {
      "address": "0xD01E143d3e09Ea5bbCB33ae6194f9be3D3c8aAbE",
      "txHash": "0x2b3584295f58f067fc6c971319c5acac0160f9b45e69bc42e20cf38ca09c0e24",
      "kind": "transparent"
    },
    {
      "address": "0x7a2ca428BB485ad1D9d026730789fb0aF20A8084",
      "txHash": "0x3c88c2db45fc0676f5dac5bb5289ce55388801d0e4622cbc7693850d34d55c34",
      "kind": "transparent"
    },
    {
      "address": "0xdC0AB0EB282303cfCf05C2189e13D91D97005452",
      "txHash": "0xa78fc9aa6308fe9463f88869d658fea5d8468f5f2804212cdcc61ec0b2098044",
      "kind": "transparent"
    },
    {
      "address": "0xadd17e996b139F7D7F94cB0d2B828816ac2bD864",
      "txHash": "0xeec0d429d5c2c683308f389240fbd702b18df0d2af8f5690b22127985915f22a",
      "kind": "transparent"
    },
    {
      "address": "0x04b93AD3Fa56bE405C747722caa42cFFf75c6417",
      "txHash": "0x5a631917927f5671adfa1daea29f43b48738ed883ea75ae0d4bc9bb610ab38b1",
      "kind": "transparent"
    },
    {
      "address": "0xb5ff1B523Dea8f33197A85cca5c6a0659d501BcE",
      "txHash": "0x0681a3b2408be01b3dd0eb64b5188ad53cb529fe2980c6225651edb0935dccc6",
      "kind": "transparent"
    },
    {
      "address": "0xF59df34d6B6DCeeD44f2F55d1751b80410431cA7",
      "txHash": "0x74be449913b6244ae9389278076f7df55297ada2e2ece871c3ff46514e5a06cf",
      "kind": "transparent"
    },
    {
      "address": "0xA9c5094c931b9d2c0f5EDc7Dd13D13498a6D9922",
      "txHash": "0x74178ca49b194b7927909e953d156e1fdadd76a91074f5128028b9318efe4f0f",
      "kind": "transparent"
    },
    {
      "address": "0x693D6074e50F6d8aC97788491c3256a538507432",
      "txHash": "0x32bd967718446949568c5d1f1f7f4d32cef62715b79afdfc934221241e1c6448",
      "kind": "transparent"
    },
    {
      "address": "0x6C8d7Aa38a5BbE64C918b4151D0BA08Be420B609",
      "txHash": "0x99401ce705b2f5f2827a7de410c3858d0982e4ff99a24ca4fd9140d8bb0a4820",
      "kind": "transparent"
    },
    {
      "address": "0x5B7263db95273e99922BD7392c04f87D42a8DA8F",
      "txHash": "0xf0417d9ea4f757a5c9a6c7fa019235a55a40d2580937f83bc5cf5d7b61e784f1",
      "kind": "transparent"
    },
    {
      "address": "0x4056207C217e8851871FC0e9242f08262D8DA21B",
      "txHash": "0x71583eec2d190a792c3da9ee7ea530505eec72f8a5276829bae3cc498ecfb9c9",
      "kind": "transparent"
    },
    {
      "address": "0x3Be67f8084dfe663D408d9D79622d95288b541D1",
      "txHash": "0x6dc3fdde58e851d1c3b7a72efc079b23c5ae2d3e4fe94bd5ffe6ffbaaf17881a",
      "kind": "transparent"
    },
    {
      "address": "0xaBb67b502A721892F967D7601C438A55eABBAba3",
      "txHash": "0x6565d44857833ca7e88a4d5a83990ece5d1c1aa8e333df2d8ee49827dad018ce",
      "kind": "transparent"
    },
    {
      "address": "0x4661175A9B0b6Dc9dC7fDC9A0CA843ECDb4D8581",
      "txHash": "0xc048d1b3fc77e9ea646126cb2d70ee9ba572af9f72853acacc481ce7ecfc14af",
      "kind": "transparent"
    },
    {
      "address": "0x02DB582899A6E0CbE4AF01C6026b94a9d0136127",
      "txHash": "0x6c66d696b1ce305ecb0f9de9232d14685c4920eeca64b22704c5420d32c9b37f",
      "kind": "transparent"
    },
    {
      "address": "0xafA76cF74BdeDBF50B380B10bc052b7e641C6349",
      "txHash": "0x7a32d9b73d516d8f438cc175ec9b59ff27127142716d6df5548e0d2ebcdccf4a",
      "kind": "transparent"
    },
    {
      "address": "0x73dbda5332734c4263d948b173d66DffB8c7Be9a",
      "txHash": "0x003468c7f70cd2c800f784a5c54703901212dfd35f0845c9ef4318b7c6b48561",
      "kind": "transparent"
    },
    {
      "address": "0x7142E575250E97F256e614FF9B3523c34FEaa5b5",
      "txHash": "0x7498addbe602fe3296929dde7b9859d665c342750ad97398f29c78358bdb976e",
      "kind": "transparent"
    },
    {
      "address": "0x416B34008BCC9f1721B67b78a432bC555Db1A707",
      "txHash": "0x6bc5882b47833ff447ec713e87d85f1c5ad3fde9c1205aa0b45d3ce8edda6aa8",
      "kind": "transparent"
    },
    {
      "address": "0xFD46c3D057933574501d2743EF115fE1c90D38BB",
      "txHash": "0xce0190af3e8a8589d179f01a6066655e7de7314ea9dca6fc8065e4ea6872b12b",
      "kind": "transparent"
    },
    {
      "address": "0xEc7D99AFf4a4121C80518F5EAfA6a5Fd830afCB3",
      "txHash": "0xbb74e2c7547f733ef4501b34f32e06ee2c762bd42dd04fcce9b222788c498375",
      "kind": "transparent"
    },
    {
      "address": "0x025421839708BAE5EadF91d6d244A052b275804B",
      "txHash": "0x6d5e3eb105f246a9e12b8a100819552b5c9960c3ef7a685ff0a7f3d2c458d4d5",
      "kind": "transparent"
    },
    {
      "address": "0x2F66dfdD4E7e910de1136cD8fEFC5D012fE41F08",
      "txHash": "0x46eae9e5e6253268e3c82c1f33c8b07a260d81ccc23db7245fe193699abbd8b0",
      "kind": "transparent"
    },
    {
      "address": "0x9F9d1fBd8f31d0bCC50B8dD37bb6410872e43390",
      "txHash": "0x21b003fd94a9e07bc64065d5a0c5f8c606df9b24a81507a905501a3da6fa1f4e",
      "kind": "transparent"
    },
    {
      "address": "0x5c696b2D2FAFA3393101D6801B61D7b567840c7f",
      "txHash": "0x89b2f31a81d00d5d0a903917968deec33860ca016f661df0061497f0ab2c2e8a",
      "kind": "transparent"
    },
    {
      "address": "0x23A44c8cFA20104215cC82d3a69b1355a994Cc17",
      "txHash": "0x34fc9b208d9a6bd145e7c96d6fb60a875672e89b5aca7195a1573048dbd1fd7d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7ae45e8793bd29aa34f0f76c49c8f2385f99c8b081eff58309127d3d030738f9": {
      "address": "0xf228BF1F8d11Dc1555fc096a7ab6FCd238f1ED6B",
      "txHash": "0x5ca1bbf7fb15db98d0b939877e925b26df28bcad189be6dca52e9c4335be3940",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "156",
            "type": "t_uint8",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/presets/ERC20PresetMinterPauser.sol:106"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Fidu",
            "src": "contracts/protocol/core/Fidu.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "248fcac079c183f953a5ce70a83e1bd95b52cf3762c28bd8525752613ca7da79": {
      "address": "0x063751Ff186bfA02779C9fA1A467B68E04fE30C9",
      "txHash": "0x5dd1d54328b174b3726314dbc5059cf4e7bb6dc6362373fbceb2408e3a45bd36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "Go",
            "label": "uniqueIdentity",
            "type": "t_address",
            "src": "contracts/protocol/core/Go.sol:14"
          },
          {
            "contract": "Go",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)16681",
            "src": "contracts/protocol/core/Go.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(GoldfinchConfig)16681": {
            "label": "contract GoldfinchConfig"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "aeb778804a9105d2ac18cd8acbdf7f70e6deda49db1a50adf2e4f825b7adb688": {
      "address": "0xb91a07A4a533DD67f84C4754bc85a9854f95e473",
      "txHash": "0x31a72fa257440567ba0cf9811bcb9cb2d1f4282d486da41ebf3ea758adfdb638",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "GoldfinchFactory",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)16681",
            "src": "contracts/protocol/core/GoldfinchFactory.sol:20"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)16681": {
            "label": "contract GoldfinchConfig"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "42f941c0a331cab6d67eedb61edfb6f13a57f065ec57be694c9d480d23c8030d": {
      "address": "0xDCE35F4ad32F53dE8dA30eF0881389F4C0df6EcC",
      "txHash": "0x84a4be75f4946aa541f58d7a4689077943fdaadf5552668438a9b3cfbebf01db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "PoolTokens",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)16681",
            "src": "contracts/protocol/core/PoolTokens.sol:20"
          },
          {
            "contract": "PoolTokens",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)9769_storage)",
            "src": "contracts/protocol/core/PoolTokens.sol:30"
          },
          {
            "contract": "PoolTokens",
            "label": "pools",
            "type": "t_mapping(t_address,t_struct(PoolInfo)18990_storage)",
            "src": "contracts/protocol/core/PoolTokens.sol:32"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)16681": {
            "label": "contract GoldfinchConfig"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)9769_storage)": {
            "label": "mapping(uint256 => struct IPoolTokens.TokenInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(TokenInfo)9769_storage": {
            "label": "struct IPoolTokens.TokenInfo",
            "members": [
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "tranche",
                "type": "t_uint256"
              },
              {
                "label": "principalAmount",
                "type": "t_uint256"
              },
              {
                "label": "principalRedeemed",
                "type": "t_uint256"
              },
              {
                "label": "interestRedeemed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PoolInfo)18990_storage)": {
            "label": "mapping(address => struct PoolTokens.PoolInfo)"
          },
          "t_struct(PoolInfo)18990_storage": {
            "label": "struct PoolTokens.PoolInfo",
            "members": [
              {
                "label": "totalMinted",
                "type": "t_uint256"
              },
              {
                "label": "totalPrincipalRedeemed",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "072f0dbf70742d27cf9d9f99a59f7ef18b06f7aafd4b0f2a78e3f9442818d2c0": {
      "address": "0xfE929Cb4726d255005F962a09DbcD286EBfC3b05",
      "txHash": "0x8cdd9e9d56b38dff50b518f76a4c27bff8811c0d4cd0735d45950e53f444c79b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "ISeniorPool",
            "label": "sharePrice",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "contract": "ISeniorPool",
            "label": "totalLoansOutstanding",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "contract": "ISeniorPool",
            "label": "totalWritedowns",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "contract": "SeniorPool",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)16681",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "contract": "SeniorPool",
            "label": "compoundBalance",
            "type": "t_uint256",
            "src": "contracts/protocol/core/SeniorPool.sol:26"
          },
          {
            "contract": "SeniorPool",
            "label": "writedowns",
            "type": "t_mapping(t_contract(ITranchedPool)10091,t_uint256)",
            "src": "contracts/protocol/core/SeniorPool.sol:27"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)16681": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_contract(ITranchedPool)10091,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)"
          },
          "t_contract(ITranchedPool)10091": {
            "label": "contract ITranchedPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "594a56e92ee540ed8d792af155aff7d2ac08694f5b765938e499ffef57bfe08e": {
      "address": "0x9dA94dB465C185E7De453C5dB6BdCc314395717C",
      "txHash": "0x01838389a36fc8f43772c4fc708c57e1eea66499ff550f9875d31d5d1f5e37ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3395_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:47"
          },
          {
            "contract": "ERC1155PresetPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/external/ERC1155PresetPauserUpgradeable.sol:113"
          },
          {
            "contract": "UniqueIdentity",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/protocol/core/UniqueIdentity.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3395_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3395_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3094_storage"
              }
            ]
          },
          "t_struct(Set)3094_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "37ba0ac63834616439fa0448d7447b488e9d497b96f74171e202ed5a2f6bfa75": {
      "address": "0x4549D0a54A66E4291284F2AbEeEb53D4d718262C",
      "txHash": "0x6a3349a3e8d4e1abbe24dde371683bd324cde7df0c0f5f60e9291f5711675b16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StakingRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17304",
            "src": "contracts/rewards/StakingRewards.sol:67"
          },
          {
            "contract": "StakingRewards",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:70"
          },
          {
            "contract": "StakingRewards",
            "label": "accumulatedRewardsPerToken",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:73"
          },
          {
            "contract": "StakingRewards",
            "label": "rewardsAvailable",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:76"
          },
          {
            "contract": "StakingRewards",
            "label": "positionToAccumulatedRewardsPerToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:79"
          },
          {
            "contract": "StakingRewards",
            "label": "targetCapacity",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:83"
          },
          {
            "contract": "StakingRewards",
            "label": "minRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:86"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:89"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:93"
          },
          {
            "contract": "StakingRewards",
            "label": "minRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:97"
          },
          {
            "contract": "StakingRewards",
            "label": "vestingLength",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:100"
          },
          {
            "contract": "StakingRewards",
            "label": "totalStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:104"
          },
          {
            "contract": "StakingRewards",
            "label": "totalLeveragedStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:108"
          },
          {
            "contract": "StakingRewards",
            "label": "leverageMultipliers",
            "type": "t_mapping(t_enum(LockupPeriod)29907,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:112"
          },
          {
            "contract": "StakingRewards",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)29916_storage)",
            "src": "contracts/rewards/StakingRewards.sol:115"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17304": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_enum(LockupPeriod)29907,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)"
          },
          "t_enum(LockupPeriod)29907": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ]
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)29916_storage)": {
            "label": "mapping(uint256 => struct StakingRewards.StakedPosition)"
          },
          "t_struct(StakedPosition)29916_storage": {
            "label": "struct StakingRewards.StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11075_storage"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Rewards)11075_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256"
              },
              {
                "label": "totalVested",
                "type": "t_uint256"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "aa0a647bb9084b53aa7a9be0691580029918bf32fe496fcb5894efa6045a4d6c": {
      "address": "0x20fb88B3973CB6d2A008809b3A2B866DD7f4a6F4",
      "txHash": "0xb02fa7c9d3b096d11eead9cc467b47fdf82fbb2c0626ea46ddcb6e5ab7646baf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "CommunityRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17304",
            "src": "contracts/rewards/CommunityRewards.sol:33"
          },
          {
            "contract": "CommunityRewards",
            "label": "rewardsAvailable",
            "type": "t_uint256",
            "src": "contracts/rewards/CommunityRewards.sol:36"
          },
          {
            "contract": "CommunityRewards",
            "label": "tokenLaunchTimeInSeconds",
            "type": "t_uint256",
            "src": "contracts/rewards/CommunityRewards.sol:39"
          },
          {
            "contract": "CommunityRewards",
            "label": "grants",
            "type": "t_mapping(t_uint256,t_struct(Rewards)10701_storage)",
            "src": "contracts/rewards/CommunityRewards.sol:42"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17304": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Rewards)10701_storage)": {
            "label": "mapping(uint256 => struct CommunityRewardsVesting.Rewards)"
          },
          "t_struct(Rewards)10701_storage": {
            "label": "struct CommunityRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalGranted",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "cliffLength",
                "type": "t_uint256"
              },
              {
                "label": "vestingInterval",
                "type": "t_uint256"
              },
              {
                "label": "revokedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "5c0e1824808aec6e4f16ff9ed8f3086c7fc9b7e7e192f39197e9ca2b63e57380": {
      "address": "0xeC9470bAe865B656E8F3b223a8F66145505cb8c2",
      "txHash": "0x0c3b0d9b86b39d7b514e5a070cca09eaeb617e72eb528ccf4819be781b37328e",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "gfi",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "MerkleDirectDistributor",
            "src": "contracts/rewards/MerkleDirectDistributor.sol:15"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "452",
            "type": "t_bytes32",
            "contract": "MerkleDirectDistributor",
            "src": "contracts/rewards/MerkleDirectDistributor.sol:16"
          },
          {
            "label": "acceptedBitMap",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MerkleDirectDistributor",
            "src": "contracts/rewards/MerkleDirectDistributor.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "405b91b1987a573a8603ca0006d88d5613977bb02b5e29495db5db789599140c": {
      "address": "0xF9dcd2f86DaBA0e55D464bD73DB5EFf03332a84C",
      "txHash": "0x039956b61a199e727e4f64e02dc4649e192c4cf0155c103d0fe973f81a17fc73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "PoolTokens",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17356",
            "src": "contracts/protocol/core/PoolTokens.sol:20"
          },
          {
            "contract": "PoolTokens",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)10129_storage)",
            "src": "contracts/protocol/core/PoolTokens.sol:30"
          },
          {
            "contract": "PoolTokens",
            "label": "pools",
            "type": "t_mapping(t_address,t_struct(PoolInfo)19766_storage)",
            "src": "contracts/protocol/core/PoolTokens.sol:32"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17356": {
            "label": "contract GoldfinchConfig"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)10129_storage)": {
            "label": "mapping(uint256 => struct IPoolTokens.TokenInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(TokenInfo)10129_storage": {
            "label": "struct IPoolTokens.TokenInfo",
            "members": [
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "tranche",
                "type": "t_uint256"
              },
              {
                "label": "principalAmount",
                "type": "t_uint256"
              },
              {
                "label": "principalRedeemed",
                "type": "t_uint256"
              },
              {
                "label": "interestRedeemed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PoolInfo)19766_storage)": {
            "label": "mapping(address => struct PoolTokens.PoolInfo)"
          },
          "t_struct(PoolInfo)19766_storage": {
            "label": "struct PoolTokens.PoolInfo",
            "members": [
              {
                "label": "totalMinted",
                "type": "t_uint256"
              },
              {
                "label": "totalPrincipalRedeemed",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "6f48a640154d2a5a12294c12c34e3d9b827155a1dc8e961130f6cb08fe5a0a91": {
      "address": "0x856D947D3001b7c19760F6e2271a518Cb7c2B136",
      "txHash": "0xf6460e2d412fab7bc8fbca92aece05ce38ea117530e4c2943eaf7f3c89cc4304",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "ISeniorPool",
            "label": "sharePrice",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "contract": "ISeniorPool",
            "label": "totalLoansOutstanding",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "contract": "ISeniorPool",
            "label": "totalWritedowns",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "contract": "SeniorPool",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17356",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "contract": "SeniorPool",
            "label": "compoundBalance",
            "type": "t_uint256",
            "src": "contracts/protocol/core/SeniorPool.sol:26"
          },
          {
            "contract": "SeniorPool",
            "label": "writedowns",
            "type": "t_mapping(t_contract(ITranchedPool)10493,t_uint256)",
            "src": "contracts/protocol/core/SeniorPool.sol:27"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17356": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_contract(ITranchedPool)10493,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)"
          },
          "t_contract(ITranchedPool)10493": {
            "label": "contract ITranchedPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "a5477a5839e6b7e5ea32c3e4448678bd1e0abb689b48ae84d2e9de4dc6df1510": {
      "address": "0x57Dde0Bd887428cC4402e90174ec305d8822ccF5",
<<<<<<< HEAD
      "txHash": "0x5614fe0e34f625cf9bcbdbefbfe0c0f55dc590b52eca4df4140cb2632a86950e",
=======
      "txHash": "0xc99f27d72911ec9a9ee55e11c4dc600ed84ac034431fcb4d70003f74a315fe24",
>>>>>>> 30e68857637b9fe7701c4d9c8b9fc77d62d9659c
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3395_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetPauserUpgradeable",
            "src": "contracts/external/ERC1155PresetPauserUpgradeable.sol:113"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "UniqueIdentity",
            "src": "contracts/protocol/core/UniqueIdentity.sol:35"
          },
          {
            "label": "supportedUIDTypes",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "UniqueIdentity",
            "src": "contracts/protocol/core/UniqueIdentity.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3395_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3395_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3094_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3094_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "dea601ebe62a9064dca727fdad69a3fd8ce5048dc8d22cac1a773b0b31cd32e7": {
      "address": "0x2cDe1A5DD64A83B1065C6529B1a77857050b9Eb3",
      "txHash": "0x3eb1c879a511bd94d184b923919f31d53409a2aed25c61a2f1c14f0affb068d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "Go",
            "label": "uniqueIdentity",
            "type": "t_address",
            "src": "contracts/protocol/core/Go.sol:14"
          },
          {
            "contract": "Go",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17304",
            "src": "contracts/protocol/core/Go.sol:18"
          },
          {
            "contract": "Go",
            "label": "legacyGoList",
            "type": "t_contract(GoldfinchConfig)17304",
            "src": "contracts/protocol/core/Go.sol:21"
          },
          {
            "contract": "Go",
            "label": "allIdTypes",
            "type": "t_array(t_uint256)11_storage",
            "src": "contracts/protocol/core/Go.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(GoldfinchConfig)17304": {
            "label": "contract GoldfinchConfig"
          },
          "t_array(t_uint256)11_storage": {
            "label": "uint256[11]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "2a132555a31f8d77526933591abc33e530407f40bb2e0e93bc53f57685ea1b7c": {
      "address": "0xC075611d8EF979EdF4899B0Fd4C9B53328ec0A3F",
      "txHash": "0x39899f2b44b335b11fc659149d265f50c10e438892c35d68d2686ec2493bf429",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "GoldfinchFactory",
            "src": "contracts/protocol/core/GoldfinchFactory.sol:23"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "2641c10d71d66be66ef119d36666f81b01114fb615df86212c06c309604f5c48": {
      "address": "0x745191edcBfdae12C9C484B2C5ECC72681b8373e",
      "txHash": "0xfe4130a42fbb41d7aed4da760f41008ef0f38d6a4bc68935acdc37da54641e67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "BackerRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17356",
            "src": "contracts/rewards/BackerRewards.sol:32"
          },
          {
            "contract": "BackerRewards",
            "label": "totalRewards",
            "type": "t_uint256",
            "src": "contracts/rewards/BackerRewards.sol:45"
          },
          {
            "contract": "BackerRewards",
            "label": "maxInterestDollarsEligible",
            "type": "t_uint256",
            "src": "contracts/rewards/BackerRewards.sol:46"
          },
          {
            "contract": "BackerRewards",
            "label": "totalInterestReceived",
            "type": "t_uint256",
            "src": "contracts/rewards/BackerRewards.sol:47"
          },
          {
            "contract": "BackerRewards",
            "label": "totalRewardPercentOfTotalGFI",
            "type": "t_uint256",
            "src": "contracts/rewards/BackerRewards.sol:48"
          },
          {
            "contract": "BackerRewards",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)28109_storage)",
            "src": "contracts/rewards/BackerRewards.sol:50"
          },
          {
            "contract": "BackerRewards",
            "label": "pools",
            "type": "t_mapping(t_address,t_struct(BackerRewardsInfo)28104_storage)",
            "src": "contracts/rewards/BackerRewards.sol:52"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17356": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)28109_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.BackerRewardsTokenInfo)"
          },
          "t_struct(BackerRewardsTokenInfo)28109_storage": {
            "label": "struct BackerRewards.BackerRewardsTokenInfo",
            "members": [
              {
                "label": "rewardsClaimed",
                "type": "t_uint256"
              },
              {
                "label": "accRewardsPerPrincipalDollarAtMint",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(BackerRewardsInfo)28104_storage)": {
            "label": "mapping(address => struct BackerRewards.BackerRewardsInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(BackerRewardsInfo)28104_storage": {
            "label": "struct BackerRewards.BackerRewardsInfo",
            "members": [
              {
                "label": "accRewardsPerPrincipalDollar",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "c1e4b45ea9677e8c1cbc33403af1d1d1bdfc92c4549ab7f6721739d362f15f63": {
      "address": "0xC89D717860D09b023A13aD0F32E45f09aa9e53f0",
      "txHash": "0x6b3f37ab504fef8681f65643a9c43a3aac7094f1540302b7fd77feb7e69a8fcc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StakingRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17304",
            "src": "contracts/rewards/StakingRewards.sol:67"
          },
          {
            "contract": "StakingRewards",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:70"
          },
          {
            "contract": "StakingRewards",
            "label": "accumulatedRewardsPerToken",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:73"
          },
          {
            "contract": "StakingRewards",
            "label": "rewardsAvailable",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:76"
          },
          {
            "contract": "StakingRewards",
            "label": "positionToAccumulatedRewardsPerToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:79"
          },
          {
            "contract": "StakingRewards",
            "label": "targetCapacity",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:83"
          },
          {
            "contract": "StakingRewards",
            "label": "minRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:86"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:89"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:93"
          },
          {
            "contract": "StakingRewards",
            "label": "minRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:97"
          },
          {
            "contract": "StakingRewards",
            "label": "vestingLength",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:100"
          },
          {
            "contract": "StakingRewards",
            "label": "totalStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:104"
          },
          {
            "contract": "StakingRewards",
            "label": "totalLeveragedStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:108"
          },
          {
            "contract": "StakingRewards",
            "label": "leverageMultipliers",
            "type": "t_mapping(t_enum(LockupPeriod)29907,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:112"
          },
          {
            "contract": "StakingRewards",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)29916_storage)",
            "src": "contracts/rewards/StakingRewards.sol:115"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17304": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_enum(LockupPeriod)29907,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)"
          },
          "t_enum(LockupPeriod)29907": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ]
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)29916_storage)": {
            "label": "mapping(uint256 => struct StakingRewards.StakedPosition)"
          },
          "t_struct(StakedPosition)29916_storage": {
            "label": "struct StakingRewards.StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11075_storage"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Rewards)11075_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256"
              },
              {
                "label": "totalVested",
                "type": "t_uint256"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "53342a820a648a3be2318de4681e3ce7a8d44a4192aae85b5938c5f8201c7ee5": {
      "address": "0x792c976adA1eF352665f24011B3Dbc868287cab4",
      "txHash": "0xa96f5c0475f847bce9c16bd6c1e8cec4e9030aef4bd1e8f9b13a8bcca72a1c30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "CommunityRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17356",
            "src": "contracts/rewards/CommunityRewards.sol:33"
          },
          {
            "contract": "CommunityRewards",
            "label": "rewardsAvailable",
            "type": "t_uint256",
            "src": "contracts/rewards/CommunityRewards.sol:36"
          },
          {
            "contract": "CommunityRewards",
            "label": "tokenLaunchTimeInSeconds",
            "type": "t_uint256",
            "src": "contracts/rewards/CommunityRewards.sol:39"
          },
          {
            "contract": "CommunityRewards",
            "label": "grants",
            "type": "t_mapping(t_uint256,t_struct(Rewards)10701_storage)",
            "src": "contracts/rewards/CommunityRewards.sol:42"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17356": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Rewards)10701_storage)": {
            "label": "mapping(uint256 => struct CommunityRewardsVesting.Rewards)"
          },
          "t_struct(Rewards)10701_storage": {
            "label": "struct CommunityRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalGranted",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "cliffLength",
                "type": "t_uint256"
              },
              {
                "label": "vestingInterval",
                "type": "t_uint256"
              },
              {
                "label": "revokedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "15e8da0ae5ade43d848bd32bd240eb297a5e8dfd7b33a0a2e255a538436b88f4": {
      "address": "0x13F717605a6899727312Ca79920f9D6e1d4Bf7cd",
      "txHash": "0x15d2a2646f01e19c17f6bc04bd665da3476a93acbcbbd7ecb3c51bcff5f0c28a",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "addresses",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GoldfinchConfig",
            "src": "contracts/protocol/core/GoldfinchConfig.sol:23"
          },
          {
            "label": "numbers",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GoldfinchConfig",
            "src": "contracts/protocol/core/GoldfinchConfig.sol:24"
          },
          {
            "label": "goList",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GoldfinchConfig",
            "src": "contracts/protocol/core/GoldfinchConfig.sol:25"
          },
          {
            "label": "valuesInitialized",
            "offset": 0,
            "slot": "454",
            "type": "t_bool",
            "contract": "GoldfinchConfig",
            "src": "contracts/protocol/core/GoldfinchConfig.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "68d43777ded85e394a5949485264cf31b27d24d744d9c4048ff5f5bb2c9ccb42": {
      "address": "0x6E1aa379f612AE2D44378021Ad5bAf7f60977C24",
      "txHash": "0x1429c0ddddd3c9ef7348b5b89a3e2d64fda1489a7315133af80b36c503e96a8f",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "uniqueIdentity",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:16"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "452",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:20"
          },
          {
            "label": "legacyGoList",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:23"
          },
          {
            "label": "allIdTypes",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)11_storage",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)11_storage": {
            "label": "uint256[11]",
            "numberOfBytes": "352"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d57f23e97608988f68b0180cd473f276f1d55a804a264b24d7ac06562d3ab346": {
      "address": "0x2CC8BF652401b044077803FC419E21118d545A61",
      "txHash": "0x59f1550908d0b1d3aa9db4d7a3c1e5cc8a6183ecc39ac62c253d0c40b1e4c88d",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "401",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:33"
          },
          {
            "label": "rewardsAvailable",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:36"
          },
          {
            "label": "tokenLaunchTimeInSeconds",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:39"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(Rewards)10740_storage)",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Rewards)10740_storage)": {
            "label": "mapping(uint256 => struct CommunityRewardsVesting.Rewards)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Rewards)10740_storage": {
            "label": "struct CommunityRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalGranted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cliffLength",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "vestingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "revokedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "af0ea0a45900b8be8be2a88ad38012b8d35616a91c13e0a725a8019cc54eccff": {
      "address": "0x36cBf97602E1Ae2D3B0Cd69bd5d100Ae59a7863a",
      "txHash": "0x92b9d750b26c63c6b5fd7c033338f40a42cabf5a444666ca7b1e6c043bbd023a",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:37"
          },
          {
            "label": "totalRewards",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:112"
          },
          {
            "label": "maxInterestDollarsEligible",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:115"
          },
          {
            "label": "totalInterestReceived",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:118"
          },
          {
            "label": "totalRewardPercentOfTotalGFI",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:121"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)25825_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:124"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(BackerRewardsInfo)25820_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:127"
          },
          {
            "label": "poolStakingRewards",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_struct(StakingRewardsPoolInfo)25833_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:130"
          },
          {
            "label": "tokenStakingRewards",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(StakingRewardsTokenInfo)25847_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(StakingRewardsSliceInfo)25844_storage)dyn_storage": {
            "label": "struct BackerRewards.StakingRewardsSliceInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(BackerRewardsInfo)25820_storage)": {
            "label": "mapping(address => struct BackerRewards.BackerRewardsInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_struct(StakingRewardsPoolInfo)25833_storage)": {
            "label": "mapping(contract ITranchedPool => struct BackerRewards.StakingRewardsPoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)25825_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.BackerRewardsTokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakingRewardsTokenInfo)25847_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.StakingRewardsTokenInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BackerRewardsInfo)25820_storage": {
            "label": "struct BackerRewards.BackerRewardsInfo",
            "members": [
              {
                "label": "accRewardsPerPrincipalDollar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BackerRewardsTokenInfo)25825_storage": {
            "label": "struct BackerRewards.BackerRewardsTokenInfo",
            "members": [
              {
                "label": "rewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accRewardsPerPrincipalDollarAtMint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardsPoolInfo)25833_storage": {
            "label": "struct BackerRewards.StakingRewardsPoolInfo",
            "members": [
              {
                "label": "accumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "slicesInfo",
                "type": "t_array(t_struct(StakingRewardsSliceInfo)25844_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakingRewardsSliceInfo)25844_storage": {
            "label": "struct BackerRewards.StakingRewardsSliceInfo",
            "members": [
              {
                "label": "fiduSharePriceAtDrawdown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principalDeployedAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedRewardsPerTokenAtDrawdown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unrealizedAccumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(StakingRewardsTokenInfo)25847_storage": {
            "label": "struct BackerRewards.StakingRewardsTokenInfo",
            "members": [
              {
                "label": "accumulatedRewardsPerTokenAtLastWithdraw",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "56564fc6ff18a62c8509ace4ea7cebd77dc4b8801d6e4dfbf619ae0b8376cab2": {
      "address": "0x82cfF053B1015430EB92e9fBF993403EE690116f",
      "txHash": "0x5716c515c66ff859ed3c266a2c5631a65805c161e0a823d1e509a6fa0f154744",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "PoolTokens",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17615",
            "src": "contracts/protocol/core/PoolTokens.sol:19"
          },
          {
            "contract": "PoolTokens",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)10238_storage)",
            "src": "contracts/protocol/core/PoolTokens.sol:29"
          },
          {
            "contract": "PoolTokens",
            "label": "pools",
            "type": "t_mapping(t_address,t_struct(PoolInfo)20112_storage)",
            "src": "contracts/protocol/core/PoolTokens.sol:31"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17615": {
            "label": "contract GoldfinchConfig"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)10238_storage)": {
            "label": "mapping(uint256 => struct IPoolTokens.TokenInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(TokenInfo)10238_storage": {
            "label": "struct IPoolTokens.TokenInfo",
            "members": [
              {
                "label": "pool",
                "type": "t_address"
              },
              {
                "label": "tranche",
                "type": "t_uint256"
              },
              {
                "label": "principalAmount",
                "type": "t_uint256"
              },
              {
                "label": "principalRedeemed",
                "type": "t_uint256"
              },
              {
                "label": "interestRedeemed",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(PoolInfo)20112_storage)": {
            "label": "mapping(address => struct PoolTokens.PoolInfo)"
          },
          "t_struct(PoolInfo)20112_storage": {
            "label": "struct PoolTokens.PoolInfo",
            "members": [
              {
                "label": "totalMinted",
                "type": "t_uint256"
              },
              {
                "label": "totalPrincipalRedeemed",
                "type": "t_uint256"
              },
              {
                "label": "created",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "81c1efa74416009a72f3b94f71750a12a800865946754f95f311a3c011048ef6": {
      "address": "0x422BF428c9777C78CDB9a6188837f79466d9bEB7",
      "txHash": "0x9e1bc3273e84d4065a4e5f1e30e7c338f7e29bdad1b11d601372a3827bada19f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "ISeniorPool",
            "label": "sharePrice",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "contract": "ISeniorPool",
            "label": "totalLoansOutstanding",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "contract": "ISeniorPool",
            "label": "totalWritedowns",
            "type": "t_uint256",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "contract": "SeniorPool",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17564",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "contract": "SeniorPool",
            "label": "compoundBalance",
            "type": "t_uint256",
            "src": "contracts/protocol/core/SeniorPool.sol:28"
          },
          {
            "contract": "SeniorPool",
            "label": "writedowns",
            "type": "t_mapping(t_contract(ITranchedPool)10623,t_uint256)",
            "src": "contracts/protocol/core/SeniorPool.sol:29"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17564": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_contract(ITranchedPool)10623,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)"
          },
          "t_contract(ITranchedPool)10623": {
            "label": "contract ITranchedPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "e38ccc92cc160eabcdf1d0355aa95de2600435380aed448334b7ca86f751e5f0": {
      "address": "0x33A36B543218898169859409f95e0C806a8da1b2",
      "txHash": "0xa1db606d295e63e71c8a4aa6cf0d119901c1beff9f5464029be2b09145d54f1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4313_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3838_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol:40"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)3518_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:48"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:86"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StakingRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17615",
            "src": "contracts/rewards/StakingRewards.sol:87"
          },
          {
            "contract": "StakingRewards",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:90"
          },
          {
            "contract": "StakingRewards",
            "label": "accumulatedRewardsPerToken",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:93"
          },
          {
            "contract": "StakingRewards",
            "label": "rewardsAvailable",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:96"
          },
          {
            "contract": "StakingRewards",
            "label": "positionToAccumulatedRewardsPerToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:99"
          },
          {
            "contract": "StakingRewards",
            "label": "targetCapacity",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:103"
          },
          {
            "contract": "StakingRewards",
            "label": "minRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:106"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:109"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:113"
          },
          {
            "contract": "StakingRewards",
            "label": "minRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:117"
          },
          {
            "contract": "StakingRewards",
            "label": "vestingLength",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:120"
          },
          {
            "contract": "StakingRewards",
            "label": "totalStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:128"
          },
          {
            "contract": "StakingRewards",
            "label": "totalLeveragedStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:131"
          },
          {
            "contract": "StakingRewards",
            "label": "leverageMultipliers",
            "type": "t_mapping(t_enum(LockupPeriod)32571,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:134"
          },
          {
            "contract": "StakingRewards",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)32589_storage)",
            "src": "contracts/rewards/StakingRewards.sol:137"
          },
          {
            "contract": "StakingRewards",
            "label": "effectiveMultipliers",
            "type": "t_mapping(t_enum(StakedPositionType)32574,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:141"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17615": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_enum(LockupPeriod)32571,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)"
          },
          "t_enum(LockupPeriod)32571": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ]
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)32589_storage)": {
            "label": "mapping(uint256 => struct StakingRewards.StakedPosition)"
          },
          "t_struct(StakedPosition)32589_storage": {
            "label": "struct StakingRewards.StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11256_storage"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256"
              },
              {
                "label": "positionType",
                "type": "t_enum(StakedPositionType)32574"
              },
              {
                "label": "unsafeEffectiveMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "unsafeBaseTokenExchangeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Rewards)11256_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256"
              },
              {
                "label": "totalVested",
                "type": "t_uint256"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(StakedPositionType)32574": {
            "label": "enum StakingRewards.StakedPositionType",
            "members": [
              "Fidu",
              "CurveLP"
            ]
          },
          "t_mapping(t_enum(StakedPositionType)32574,t_uint256)": {
            "label": "mapping(enum StakingRewards.StakedPositionType => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Counter)3518_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)4313_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4313_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3838_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3574_storage"
              }
            ]
          },
          "t_struct(Map)3574_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3566_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3566_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)3566_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          }
        }
      }
    },
    "77bb60df5464b6ddc6ed1b8f105fc37478238795643b4f4b081c894e53f04516": {
      "address": "0xe46A77C2A61E43bb0Ff222118559eAc84014C719",
      "txHash": "0xff8099316612146d036eb6e4a632a740fee547db6ffa27dc7bdaea39412910ff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap1",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap2",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap3",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "contract": "BaseUpgradeablePausable",
            "label": "__gap4",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "contract": "Zapper",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17564",
            "src": "contracts/protocol/core/Zapper.sol:22"
          },
          {
            "contract": "Zapper",
            "label": "tranchedPoolZaps",
            "type": "t_mapping(t_uint256,t_struct(Zap)26218_storage)",
            "src": "contracts/protocol/core/Zapper.sol:32"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17564": {
            "label": "contract GoldfinchConfig"
          },
          "t_mapping(t_uint256,t_struct(Zap)26218_storage)": {
            "label": "mapping(uint256 => struct Zapper.Zap)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Zap)26218_storage": {
            "label": "struct Zapper.Zap",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "stakingPositionId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)4204_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)4204_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4024_storage"
              }
            ]
          },
          "t_struct(Set)4024_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "483d76ca778c81d60173349d30921a9261d852e8ce786d1fbdb160cd6b75f65b": {
      "address": "0x353D90F1b55d3dfC8D79D7A159b3328e224ab0bB",
      "txHash": "0x46fdaaf0ddadbfb7ee563a5b8b44268dd4d929fcc1ecbeaa6c2c07652df73427",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:26"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)10114_storage)",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:36"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_struct(PoolInfo)16643_storage)",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:38"
          },
          {
            "label": "royaltyParams",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(RoyaltyParams)12930_storage",
            "contract": "PoolTokens",
            "src": "contracts/protocol/core/PoolTokens.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)16643_storage)": {
            "label": "mapping(address => struct PoolTokens.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)10114_storage)": {
            "label": "mapping(uint256 => struct IPoolTokens.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolInfo)16643_storage": {
            "label": "struct PoolTokens.PoolInfo",
            "members": [
              {
                "label": "totalMinted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalPrincipalRedeemed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoyaltyParams)12930_storage": {
            "label": "struct ConfigurableRoyaltyStandard.RoyaltyParams",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyPercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)10114_storage": {
            "label": "struct IPoolTokens.TokenInfo",
            "members": [
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tranche",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "principalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "principalRedeemed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "interestRedeemed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "25e1d2d4e04f4d51c44b1f90f458527f939efacc06633d4d39dd6c3d8dc55081": {
      "address": "0x5B06A5aA7fea5EE270E495e1418E6FdDa29766c5",
      "txHash": "0x7948ca8eacf3580df722d590e3227f91544f4ca8de85f43c6b98c397677b25e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)260_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3192_storage)",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2717_storage",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC721PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)2397_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StakingRewards",
            "label": "config",
            "type": "t_contract(GoldfinchConfig)17540",
            "src": "contracts/rewards/StakingRewards.sol:89"
          },
          {
            "contract": "StakingRewards",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:92"
          },
          {
            "contract": "StakingRewards",
            "label": "accumulatedRewardsPerToken",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:95"
          },
          {
            "contract": "StakingRewards",
            "label": "rewardsAvailable",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:98"
          },
          {
            "contract": "StakingRewards",
            "label": "positionToAccumulatedRewardsPerToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:101"
          },
          {
            "contract": "StakingRewards",
            "label": "targetCapacity",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:105"
          },
          {
            "contract": "StakingRewards",
            "label": "minRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:108"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRate",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:111"
          },
          {
            "contract": "StakingRewards",
            "label": "maxRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:115"
          },
          {
            "contract": "StakingRewards",
            "label": "minRateAtPercent",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:119"
          },
          {
            "contract": "StakingRewards",
            "label": "vestingLength",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:122"
          },
          {
            "contract": "StakingRewards",
            "label": "totalStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:130"
          },
          {
            "contract": "StakingRewards",
            "label": "totalLeveragedStakedSupply",
            "type": "t_uint256",
            "src": "contracts/rewards/StakingRewards.sol:133"
          },
          {
            "contract": "StakingRewards",
            "label": "leverageMultipliers",
            "type": "t_mapping(t_enum(LockupPeriod)31763,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:136"
          },
          {
            "contract": "StakingRewards",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)31781_storage)",
            "src": "contracts/rewards/StakingRewards.sol:139"
          },
          {
            "contract": "StakingRewards",
            "label": "effectiveMultipliers",
            "type": "t_mapping(t_enum(StakedPositionType)31766,t_uint256)",
            "src": "contracts/rewards/StakingRewards.sol:143"
          }
        ],
        "types": {
          "t_contract(GoldfinchConfig)17540": {
            "label": "contract GoldfinchConfig"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_enum(LockupPeriod)31763,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)"
          },
          "t_enum(LockupPeriod)31763": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ]
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)31781_storage)": {
            "label": "mapping(uint256 => struct StakingRewards.StakedPosition)"
          },
          "t_struct(StakedPosition)31781_storage": {
            "label": "struct StakingRewards.StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11194_storage"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256"
              },
              {
                "label": "positionType",
                "type": "t_enum(StakedPositionType)31766"
              },
              {
                "label": "unsafeEffectiveMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "unsafeBaseTokenExchangeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Rewards)11194_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256"
              },
              {
                "label": "totalVested",
                "type": "t_uint256"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(StakedPositionType)31766": {
            "label": "enum StakingRewards.StakedPositionType",
            "members": [
              "Fidu",
              "CurveLP"
            ]
          },
          "t_mapping(t_enum(StakedPositionType)31766,t_uint256)": {
            "label": "mapping(enum StakingRewards.StakedPositionType => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Counter)2397_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)3192_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)3192_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2903_storage"
              }
            ]
          },
          "t_struct(Set)2903_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2717_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2453_storage"
              }
            ]
          },
          "t_struct(Map)2453_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2445_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2445_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)2445_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)260_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_struct(RoleData)260_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3083_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3083_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2903_storage"
              }
            ]
          }
        }
      }
    },
    "23c6268308b10dc412b47233d12b0402264551f0b7f2872a5df97e8c41cddfb4": {
      "address": "0x9ffFAD7128152190065C800774443af102B62052",
      "txHash": "0xcfa7dbbc45574d9c60af8e6b644af7d493b97f1e1304a6b6e5fd6720dbe12e4e",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "sharePrice",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "label": "totalLoansOutstanding",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "label": "totalWritedowns",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "454",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "label": "compoundBalance",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:28"
          },
          {
            "label": "writedowns",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_uint256)",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:29"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "059abd15590a3bb21a4e13762f3cf81864c4d2127c7971a9e4c500bfa09ee335": {
      "address": "0xDC962ab1a0732d096F65E1a64429D4a919469843",
      "txHash": "0xec9cad5ff3d8ebdcff3095300e2d7ea2f1c889463fb20c3df31f4b9c8f720e3f",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Zapper",
            "src": "contracts/protocol/core/Zapper.sol:23"
          },
          {
            "label": "tranchedPoolZaps",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(Zap)22700_storage)",
            "contract": "Zapper",
            "src": "contracts/protocol/core/Zapper.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Zap)22700_storage)": {
            "label": "mapping(uint256 => struct Zapper.Zap)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Zap)22700_storage": {
            "label": "struct Zapper.Zap",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakingPositionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "112a24f4f71147501c3cbe7a41068ef41278ed3b0faf2be251251cd67cdc4b4a": {
      "address": "0xE130F1ac86352C3fbAC0564Ba375B15382da8D82",
      "txHash": "0x41a951013528873ddf9d92d37618b768c46d9bf14635c1ea8e268fc733a4d74a",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "401",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:43"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:46"
          },
          {
            "label": "accumulatedRewardsPerToken",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:49"
          },
          {
            "label": "rewardsAvailable",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:52"
          },
          {
            "label": "positionToAccumulatedRewardsPerToken",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:55"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:59"
          },
          {
            "label": "minRate",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:62"
          },
          {
            "label": "maxRate",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:65"
          },
          {
            "label": "maxRateAtPercent",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:69"
          },
          {
            "label": "minRateAtPercent",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:73"
          },
          {
            "label": "vestingLength",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:78"
          },
          {
            "label": "totalStakedSupply",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:86"
          },
          {
            "label": "totalLeveragedStakedSupply",
            "offset": 0,
            "slot": "463",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:89"
          },
          {
            "label": "leverageMultipliers",
            "offset": 0,
            "slot": "464",
            "type": "t_mapping(t_enum(LockupPeriod)28950,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:92"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)10336_storage)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:95"
          },
          {
            "label": "effectiveMultipliers",
            "offset": 0,
            "slot": "466",
            "type": "t_mapping(t_enum(StakedPositionType)10321,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_enum(LockupPeriod)28950": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakedPositionType)10321": {
            "label": "enum StakedPositionType",
            "members": [
              "Fidu",
              "CurveLP"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LockupPeriod)28950,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakedPositionType)10321,t_uint256)": {
            "label": "mapping(enum StakedPositionType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)10336_storage)": {
            "label": "mapping(uint256 => struct StakedPosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Rewards)11283_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalVested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakedPosition)10336_storage": {
            "label": "struct StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11283_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "positionType",
                "type": "t_enum(StakedPositionType)10321",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "unsafeEffectiveMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "unsafeBaseTokenExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b3a5f49f3dd1b7b69021fe29cde7fa858dd32d13eeeb91b224da19780196ff8f": {
      "address": "0x7Ada4CD6Ed2Fc3ddE9bcbb7fDE42ACB4Df7Aa9E4",
      "txHash": "0xfde186e893c6691815ea2c76c2ce0bc701f408bf7bee4923b5f087677b84424f",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "156",
            "type": "t_uint8",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20UpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/presets/ERC20PresetMinterPauser.sol:106"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Fidu",
            "src": "contracts/protocol/core/Fidu.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f531b7ba1619ad18e264cfeb9e01b8ff2f65983778af95a69e02cd0ff6d59c48": {
      "address": "0x9b5A75B64652465A0773e116F2B926CB717e736D",
      "txHash": "0xf6608aa89006606f3087c56de76ac56ecac82ec15abee64c1e41b85c885155f7",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "upgradeDataFor",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:21"
          },
          {
            "label": "_nextImplementationOf",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:24"
          },
          {
            "label": "lineageIdOf",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:27"
          },
          {
            "label": "_currentOfLineage",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:30"
          },
          {
            "label": "currentLineageId",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "ImplementationRepository",
            "src": "contracts/protocol/core/proxy/ImplementationRepository.sol:33"
          },
          {
            "label": "_byVersion",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_bytes_memory_ptr,t_address)",
            "contract": "VersionedImplementationRepository",
            "src": "contracts/protocol/core/proxy/VersionedImplementationRepository.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_address)": {
            "label": "mapping(bytes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "43a9264a4ee6869494a439b66417d07de36533162503f9dd464b2a7265e91c81": {
      "address": "0x73eccD6288e117cAcA738BDAD4FEC51312166C1A",
      "txHash": "0x17fb373dedad1d9efd84fda1f34e5c05522150096970aae6455e6319dce75dec",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "sharePrice",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "label": "totalLoansOutstanding",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "label": "totalWritedowns",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "454",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "label": "compoundBalance",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:28"
          },
          {
            "label": "writedowns",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_uint256)",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:29"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d173437a93f6d5d474ffadc205e519725001fd2c3df6fa8b252999f5f3bc1fb3": {
      "address": "0x85C5Dd61585773423e378146D4bEC6f8D149E248",
      "txHash": "0xc44f8f6dbdc42f596ad1d7586486ec842953d136be915fc9f1b568f1813addda",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "GoldfinchFactory",
            "src": "contracts/protocol/core/GoldfinchFactory.sol:23"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1829e65b0dc0befd4c019c9df4613e22590fe048b371ab852dc927681dac8d17": {
      "address": "0xE44f2F7E704d2817CF2B8bd4C91fA90d19B8f9eC",
      "txHash": "0x36e509a0830a544241736205a74d54626959b555d2465feadb9714e71af13d7d",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "401",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:43"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:46"
          },
          {
            "label": "accumulatedRewardsPerToken",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:49"
          },
          {
            "label": "rewardsAvailable",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:52"
          },
          {
            "label": "positionToAccumulatedRewardsPerToken",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:55"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:59"
          },
          {
            "label": "minRate",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:62"
          },
          {
            "label": "maxRate",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:65"
          },
          {
            "label": "maxRateAtPercent",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:69"
          },
          {
            "label": "minRateAtPercent",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:73"
          },
          {
            "label": "vestingLength",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:78"
          },
          {
            "label": "totalStakedSupply",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:86"
          },
          {
            "label": "totalLeveragedStakedSupply",
            "offset": 0,
            "slot": "463",
            "type": "t_uint256",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:89"
          },
          {
            "label": "leverageMultipliers",
            "offset": 0,
            "slot": "464",
            "type": "t_mapping(t_enum(LockupPeriod)28969,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:92"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(StakedPosition)10336_storage)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:95"
          },
          {
            "label": "effectiveMultipliers",
            "offset": 0,
            "slot": "466",
            "type": "t_mapping(t_enum(StakedPositionType)10321,t_uint256)",
            "contract": "StakingRewards",
            "src": "contracts/rewards/StakingRewards.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_enum(LockupPeriod)28969": {
            "label": "enum StakingRewards.LockupPeriod",
            "members": [
              "SixMonths",
              "TwelveMonths",
              "TwentyFourMonths"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakedPositionType)10321": {
            "label": "enum StakedPositionType",
            "members": [
              "Fidu",
              "CurveLP"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(LockupPeriod)28969,t_uint256)": {
            "label": "mapping(enum StakingRewards.LockupPeriod => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakedPositionType)10321,t_uint256)": {
            "label": "mapping(enum StakedPositionType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedPosition)10336_storage)": {
            "label": "mapping(uint256 => struct StakedPosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Rewards)11283_storage": {
            "label": "struct StakingRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalUnvested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalVested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalPreviouslyVested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakedPosition)10336_storage": {
            "label": "struct StakedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewards",
                "type": "t_struct(Rewards)11283_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leverageMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "positionType",
                "type": "t_enum(StakedPositionType)10321",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "unsafeEffectiveMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "unsafeBaseTokenExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e268229f6e09c96d9923fe497d3b4a53acdf4b288c0b5ed6cc4e533828d09228": {
      "address": "0xC98ca12501cf011b9630057D1C4127e0758C8E62",
      "txHash": "0x06747e1a39f1fb84f021222380ae5d816efa8c605b1a04444546d93fbb202fe2",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165UpgradeSafe",
            "src": "contracts/external/ERC165.sol:65"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(UintSet)3091_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:47"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(UintToAddressMap)2616_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:50"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:53"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:56"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:59"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:62"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:65"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721UpgradeSafe",
            "src": "contracts/external/ERC721.sol:598"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeSafe",
            "src": "contracts/external/ERC721Pausable.sol:49"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeSafe",
            "src": "contracts/external/ERC721PresetMinterPauserAutoId.sol:85"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "401",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:33"
          },
          {
            "label": "rewardsAvailable",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:36"
          },
          {
            "label": "tokenLaunchTimeInSeconds",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:39"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(Rewards)10740_storage)",
            "contract": "CommunityRewards",
            "src": "contracts/rewards/CommunityRewards.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2344_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3091_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Rewards)10740_storage)": {
            "label": "mapping(uint256 => struct CommunityRewardsVesting.Rewards)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2352_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2344_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2344_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Rewards)10740_storage": {
            "label": "struct CommunityRewardsVesting.Rewards",
            "members": [
              {
                "label": "totalGranted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cliffLength",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "vestingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "revokedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3091_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2616_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2352_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4460d1d2d766d65210c7aebb56aa247b330def13ba4b00e316bb417c3c09ddee": {
      "address": "0x638f9B6a336bc830d10a1DabF03AD5ae23b42203",
      "txHash": "0xeb676dfc0a5c1f0434ede392bf40bd7b52f127c9492a35e1c7b67e32341abb28",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "gfi",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "MerkleDirectDistributor",
            "src": "contracts/rewards/MerkleDirectDistributor.sol:15"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "452",
            "type": "t_bytes32",
            "contract": "MerkleDirectDistributor",
            "src": "contracts/rewards/MerkleDirectDistributor.sol:16"
          },
          {
            "label": "acceptedBitMap",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MerkleDirectDistributor",
            "src": "contracts/rewards/MerkleDirectDistributor.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ff33f33ac10f97ff76332d8b2875ef224bb52047e2769220ef01b4d15766088c": {
      "address": "0x3B83e7EBeeBF9155c107B7b95d20331c45D1790e",
      "txHash": "0xe149d16ee21fccc631236f29733e78ebe7d23c0eb61485d96f61349ea3bf005a",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "uniqueIdentity",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:16"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "452",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:20"
          },
          {
            "label": "legacyGoList",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:23"
          },
          {
            "label": "allIdTypes",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)11_storage",
            "contract": "Go",
            "src": "contracts/protocol/core/Go.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)11_storage": {
            "label": "uint256[11]",
            "numberOfBytes": "352"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a255d8db9ab1a9ca18ae73d56a187b69fb86b5e69d19d82f0a87986c12ca372a": {
      "address": "0xB09490184946f9bcEc002B598ce02c1A166CBc52",
      "txHash": "0x0f80e39c8a1c7b36d76155669c0032ad5dbd585874f6e11b1e1a0c6da4546a59",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:37"
          },
          {
            "label": "totalRewards",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:112"
          },
          {
            "label": "maxInterestDollarsEligible",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:115"
          },
          {
            "label": "totalInterestReceived",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:118"
          },
          {
            "label": "totalRewardPercentOfTotalGFI",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:121"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)25844_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:124"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(BackerRewardsInfo)25839_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:127"
          },
          {
            "label": "poolStakingRewards",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_struct(StakingRewardsPoolInfo)25852_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:130"
          },
          {
            "label": "tokenStakingRewards",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(StakingRewardsTokenInfo)25866_storage)",
            "contract": "BackerRewards",
            "src": "contracts/rewards/BackerRewards.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(StakingRewardsSliceInfo)25863_storage)dyn_storage": {
            "label": "struct BackerRewards.StakingRewardsSliceInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(BackerRewardsInfo)25839_storage)": {
            "label": "mapping(address => struct BackerRewards.BackerRewardsInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_struct(StakingRewardsPoolInfo)25852_storage)": {
            "label": "mapping(contract ITranchedPool => struct BackerRewards.StakingRewardsPoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BackerRewardsTokenInfo)25844_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.BackerRewardsTokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakingRewardsTokenInfo)25866_storage)": {
            "label": "mapping(uint256 => struct BackerRewards.StakingRewardsTokenInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BackerRewardsInfo)25839_storage": {
            "label": "struct BackerRewards.BackerRewardsInfo",
            "members": [
              {
                "label": "accRewardsPerPrincipalDollar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BackerRewardsTokenInfo)25844_storage": {
            "label": "struct BackerRewards.BackerRewardsTokenInfo",
            "members": [
              {
                "label": "rewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accRewardsPerPrincipalDollarAtMint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardsPoolInfo)25852_storage": {
            "label": "struct BackerRewards.StakingRewardsPoolInfo",
            "members": [
              {
                "label": "accumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "slicesInfo",
                "type": "t_array(t_struct(StakingRewardsSliceInfo)25863_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakingRewardsSliceInfo)25863_storage": {
            "label": "struct BackerRewards.StakingRewardsSliceInfo",
            "members": [
              {
                "label": "fiduSharePriceAtDrawdown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principalDeployedAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedRewardsPerTokenAtDrawdown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unrealizedAccumulatedRewardsPerTokenAtLastCheckpoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(StakingRewardsTokenInfo)25866_storage": {
            "label": "struct BackerRewards.StakingRewardsTokenInfo",
            "members": [
              {
                "label": "accumulatedRewardsPerTokenAtLastWithdraw",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "cf3531a59fc18f58c56f5b54461d25d542f5deeb8c04f69c3f3c46f743c04b85": {
      "address": "0x2d96Fc9740A2a49f6Cf95ef31f5C76c8e129fB13",
      "txHash": "0x89ca5a2fb091a8b8b07308bf4d488fc83c0f2cd18c9ee97bc0be6e96d8d06ed1",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "sharePrice",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "label": "totalLoansOutstanding",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "label": "totalWritedowns",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "454",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "label": "compoundBalance",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:28"
          },
          {
            "label": "writedowns",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_uint256)",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:29"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7cd78fe1e0780ae35c1bb556780004afcdf4303636892fb432df43ead6e4702d": {
      "address": "0x9448B67263A2ad561ade2Cc3d962222d634FC649",
      "txHash": "0x8d45cb1104154011cf6303e7233c2a1153a3e4704d9759e9a3e11c480950360a",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "GoldfinchFactory",
            "src": "contracts/protocol/core/GoldfinchFactory.sol:25"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c7e5edfc0b25de58f182bc7608fff92da50ffe2f06e6b626e8cb841019179470": {
      "address": "0xD487bDEe0f13989bA38A39E2b95d77B0F03e1FEd",
      "txHash": "0x025013eb7385bf6ce621f5941909cd98288c2887f60b9e5091b9294993d6571a",
      "layout": {
        "solcVersion": "0.6.12",
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "label": "__gap1",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:31"
          },
          {
            "label": "__gap2",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:32"
          },
          {
            "label": "__gap3",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:33"
          },
          {
            "label": "__gap4",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseUpgradeablePausable",
            "src": "contracts/protocol/core/BaseUpgradeablePausable.sol:34"
          },
          {
            "label": "sharePrice",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:9"
          },
          {
            "label": "totalLoansOutstanding",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:10"
          },
          {
            "label": "totalWritedowns",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "ISeniorPool",
            "src": "contracts/interfaces/ISeniorPool.sol:11"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "454",
            "type": "t_contract(GoldfinchConfig)15934",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:22"
          },
          {
            "label": "compoundBalance",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:28"
          },
          {
            "label": "writedowns",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_contract(ITranchedPool)10566,t_uint256)",
            "contract": "SeniorPool",
            "src": "contracts/protocol/core/SeniorPool.sol:29"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(GoldfinchConfig)15934": {
            "label": "contract GoldfinchConfig",
            "numberOfBytes": "20"
          },
          "t_contract(ITranchedPool)10566": {
            "label": "contract ITranchedPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ITranchedPool)10566,t_uint256)": {
            "label": "mapping(contract ITranchedPool => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2982_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2802_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2982_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)2802_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
